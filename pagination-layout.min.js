(function(root,factory){if(typeof define==="function"&&define.amd){define([],factory)}else if(typeof exports==="object"){module.exports=factory()}else{root.paginationLayout=factory()}})(this,function(){function paginationLayout(pages,currentPage){function last(array){const length=array==null?0:array.length;return length?array[length-1]:undefined}if(!pages||!pages.length){return false}if([1,2,3,4,5,6,7].indexOf(pages.length)!==-1){const defaultView=[];for(let i=1;i<=pages.length;i++){defaultView.push(i)}return defaultView}currentPage=currentPage||1;const boundary=2;let boundaryMiddle=false;if(pages.length-currentPage>=3||pages.length-currentPage===1){boundaryMiddle=true}if(currentPage>pages.length){console.warn("Page selection out of bounds.  Picking array length as current page.");currentPage=pages.length}if(currentPage<1){console.warn("Page selection out of bounds.  Picking page 1.");currentPage=1}const output=[];if(!boundaryMiddle){for(let i=currentPage;i<=pages.length;i++){if(output.length===boundary){break}output.push(i)}if(output.length<boundary){for(let i=currentPage-1;i>pages.length-boundary;i--){output.unshift(i)}}}else{output.push(currentPage-1);output.push(currentPage);output.push(currentPage+1)}if(pages.length-last(output)===1){output.push(pages.length)}if(output[0]===2){output.unshift(1)}if(pages.length>boundary&&pages.length>7){output.unshift(1,"...")}if(!(pages.length-last(output)>1)){return output}output.push("...");output.push(pages.length);return output}return paginationLayout});
